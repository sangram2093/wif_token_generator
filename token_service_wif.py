# token_service_wif.py
import os
from google.auth.transport.requests import Request
from google.oauth2 import id_token as google_id_token
from google.oauth2 import credentials as oauth2_credentials

WIF_HOME = os.environ.get("WIF_HOME", ".")
WIF_TOKEN_FILENAME = os.path.join(WIF_HOME, "wif_token.txt")

def retrieve_gcp_svc_token(audience: str) -> str:
    """Retrieve ID token for Cloud Run using WIF short-lived impersonated SA token."""

    # Read short-lived impersonated SA token from file generated by generate_wif_token.py
    with open(WIF_TOKEN_FILENAME, "r") as f:
        access_token = f.read().strip()

    # Create Credentials object directly from the impersonated SA token
    impersonated_sa_creds = oauth2_credentials.Credentials(token=access_token)

    # Use fetch_id_token to get Cloud Run audience-specific token
    auth_req = Request()
    id_token = google_id_token.fetch_id_token(auth_req, audience, creds=impersonated_sa_creds)

    return id_token
