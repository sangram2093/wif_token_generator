import os
import requests

WIF_HOME = os.environ.get("WIF_HOME", ".")
WIF_TOKEN_FILENAME = os.path.join(WIF_HOME, "wif_token.txt")

def retrieve_gcp_svc_token(audience: str) -> str:
    """Retrieve ID token for Cloud Run using WIF short-lived impersonated SA token."""

    # Read short-lived impersonated SA token from file generated by generate_wif_token.py
    with open(WIF_TOKEN_FILENAME, "r") as f:
        access_token = f.read().strip()

    # Your impersonated Service Account email (the one in get_impersonated_credentials)
    target_service_account = "traj-wif-sae-cd-dev-tlt-fr-a00-1.iam.gserviceaccount.com"

    url = f"https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/{target_service_account}:generateIdToken"
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    body = {
        "audience": audience,
        "includeEmail": True
    }

    response = requests.post(url, headers=headers, json=body)
    if response.status_code != 200:
        raise RuntimeError(f"Failed to get ID token: {response.status_code} - {response.text}")

    id_token = response.json()["token"]
    return id_token
